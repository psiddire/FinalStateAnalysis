//#include "FinalStateAnalysis/DataAlgos/interface/JetSelections.h"
#include "FinalStateAnalysis/DataFormats/interface/PATFinalState.h"

#include "DataFormats/Candidate/interface/Candidate.h"
#include "DataFormats/RecoCandidate/interface/RecoCandidate.h"
//#include "DataFormats/RecoCandidate/interface/JetCandidate.h"
#include "DataFormats/Math/interface/deltaPhi.h"
#include "FWCore/ParameterSet/interface/FileInPath.h"
#include "DataFormats/PatCandidates/interface/Jet.h"

#include "TFormula.h"

double get_bweight2016(float pt, float eta, int flavor, float deepcsv){

  double sf=1.0;

TString sysType[]={"central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","up_jesPileUpPtBB"};
int jetFlavor[]={1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2};
float etaMin[]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,1.6};
float etaMax[]={2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,2.4,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.4,2.4,2.4,2.4,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.4,2.4,2.4,2.4,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.4,2.4,2.4,2.4,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.4,2.4,2.4,2.4,2.4};
float ptMin[]={20.0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,40,40,40,40,40,40,40,40,40,40,40,40,60,60,60,60,60,60,60,60,60,60,60,60,60};
float ptMax[]={10000,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,30,30,30,30,30,30,30,30,30,30,30,30,40,40,40,40,40,40,40,40,40,40,40,40,60,60,60,60,60,60,60,60,60,60,60,60,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0};
float discrMin[]={-15,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,0.4599};
float discrMax[]={1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,1.1};

TFormula formula[]={TFormula("","1.0"),TFormula("","1.65072476864"),TFormula("","0.925446987152"),TFormula("","(0.690247+3.09067*x)"),TFormula("","(1.14424+0.654415*x)"),TFormula("","(2.62122+-5.14446*x)"),TFormula("","(0.774288+0.571816*x)"),TFormula("","(0.823072+0.447207*x)"),TFormula("","(1.25063+-0.482467*x)"),TFormula("","(0.52793+0.894891*x)"),TFormula("","(1.162+-0.18732*x)"),TFormula("","(1.6041+-0.870524*x)"),TFormula("","(1.7857+-1.12691*x)"),TFormula("","(0.621692+0.385766*x)"),TFormula("","(0.962469+-0.0292837*x)"),TFormula("","(2.48813+-1.79714*x)"),TFormula("","(1.15132+-0.320005*x)"),TFormula("","(0.932703+-0.0891515*x)"),TFormula("","0.844532489777"),TFormula("","1.29787051678"),TFormula("","1.0091394186"),TFormula("","(0.901802+1.41048*x)"),TFormula("","(1.47114+-1.64471*x)"),TFormula("","(1.19805+-0.572506*x)"),TFormula("","(0.811743+0.623111*x)"),TFormula("","(1.30269+-0.630901*x)"),TFormula("","(0.952576+0.130378*x)"),TFormula("","(1.08608+-0.124065*x)"),TFormula("","(0.500218+0.875875*x)"),TFormula("","(2.05195+-1.5221*x)"),TFormula("","(0.415448+0.78836*x)"),TFormula("","(2.09071+-1.38872*x)"),TFormula("","(0.142681+0.983889*x)"),TFormula("","(1.643+-0.754608*x)"),TFormula("","(0.958067+0.00222808*x)"),TFormula("","(1.12991+-0.179233*x)"),TFormula("","0.952649056911"),TFormula("","1.18521738052"),TFormula("","1.06251251698"),TFormula("","(1.0432+0.253773*x)"),TFormula("","(1.28589+-1.04856*x)"),TFormula("","(1.00218+0.0653385*x)"),TFormula("","(0.801684+0.685877*x)"),TFormula("","(0.983536+0.221377*x)"),TFormula("","(1.46041+-0.815522*x)"),TFormula("","(0.203166+1.58059*x)"),TFormula("","(2.63482+-2.5697*x)"),TFormula("","(0.701492+0.417982*x)"),TFormula("","(0.868691+0.181926*x)"),TFormula("","(1.31792+-0.401874*x)"),TFormula("","(1.66544+-0.825127*x)"),TFormula("","(0.0326705+1.06684*x)"),TFormula("","(1.29855+-0.331925*x)"),TFormula("","(1.54038+-0.58729*x)"),TFormula("","0.959551811218"),TFormula("","1.37455689907"),TFormula("","1.11807191372"),TFormula("","(1.17334+-0.726197*x)"),TFormula("","(0.876653+0.865876*x)"),TFormula("","(1.36091+-1.03543*x)"),TFormula("","(0.83482+0.592845*x)"),TFormula("","(1.17331+-0.271748*x)"),TFormula("","(1.22486+-0.383837*x)"),TFormula("","(0.958262+0.124254*x)"),TFormula("","(0.795639+0.401815*x)"),TFormula("","(1.58149+-0.812608*x)"),TFormula("","(0.986368+0.0276071*x)"),TFormula("","(2.02722+-1.32502*x)"),TFormula("","(0.366479+0.697677*x)"),TFormula("","(0.300072+0.774626*x)"),TFormula("","(2.98379+-2.1908*x)"),TFormula("","(-0.678205+1.67614*x)"),TFormula("","0.979492843151"),TFormula("","1.2864574194"),TFormula("","1.28895795345"),TFormula("","(1.45426+-2.17216*x)"),TFormula("","(0.997762+0.27752*x)"),TFormula("","(1.45821+-1.5303*x)"),TFormula("","(1.01987+-0.173622*x)"),TFormula("","(0.373921+1.47631*x)"),TFormula("","(1.81403+-1.65505*x)"),TFormula("","(0.690024+0.487148*x)"),TFormula("","(-0.0191226+1.6975*x)"),TFormula("","(2.1878+-1.71298*x)"),TFormula("","(1.62271+-0.91517*x)"),TFormula("","(-0.816589+2.25481*x)"),TFormula("","(2.00761+-1.18493*x)"),TFormula("","(1.35391+-0.427455*x)"),TFormula("","(1.59027+-0.688625*x)"),TFormula("","(0.327583+0.644729*x)"),TFormula("","0.965219855309"),TFormula("","1.13019299507"),TFormula("","0.683449736213"),TFormula("","0.629051+x*(3.96408+x*(30.7638+x*(-467.526+x*(1990.88+x*(-3640.82+x*2473.61)))))"),TFormula("","1.04387503643"),TFormula("","1.13081479073"),TFormula("","0.666127445797"),TFormula("","0.578143+x*(7.35283+x*(-33.9978+x*(41.4984+x*(60.8898+x*(-157.973+x*63.4609)))))"),TFormula("","0.879836354229"),TFormula("","0.916836023331"),TFormula("","0.729049797835"),TFormula("","0.601571+x*(11.1262+x*(-88.7611+x*(239.626+x*(69.6985+x*(-1189.55+x*1273.89)))))"),TFormula("","0.951685168436"),TFormula("","1.09543335438"),TFormula("","0.783740486421"),TFormula("","0.72295+x*(4.75485+x*(5.93667+x*(-287.695+x*(1396.46+x*(-2675.35+x*1836.37)))))"),TFormula("","0.985159319907"),TFormula("","1.03079879284"),TFormula("","0.820906732493"),TFormula("","0.748623+x*(6.19529+x*(-40.8516+x*(93.83+x*(22.921+x*(-408.264+x*453.341)))))"),TFormula("","0.999748940467"),TFormula("","0.871795237064"),TFormula("","0.934163412693"),TFormula("","0.900608+x*(2.92425+x*(-23.0533+x*(66.3856+x*(-0.37689+x*(-331.853+x*428.281)))))"),TFormula("","1.03499908811"),TFormula("","1.16499519348"),TFormula("","0.836624598068"),TFormula("","0.785385+x*(3.74389+x*(29.9332+x*(-591.412+x*(2971.62+x*(-6137.65+x*4537.44)))))"),TFormula("","0.904895294528"),TFormula("","1.20939671993"),TFormula("","0.858200807702"),TFormula("","0.78225+x*(6.65327+x*(-55.8885+x*(237.434+x*(-721.521+x*(1431.03+x*-1202.8)))))"),TFormula("","0.900367851945"),TFormula("","1.15254795551"),TFormula("","0.90442269558"),TFormula("","0.903812+x*(-0.611878+x*(59.4981+x*(-626.612+x*(2705.65+x*(-5346.22+x*3986.88)))))"),TFormula("","1.02484565742"),TFormula("","1.32760941982"),TFormula("","0.884598965877"),TFormula("","0.813593+x*(6.43247+x*(-73.0223+x*(564.841+x*(-2607.23+x*(5824.84+x*-4800.21)))))"),TFormula("","1.055077411"),TFormula("","1.18960750103"),TFormula("","0.923370244476"),TFormula("","0.85293+x*(6.66039+x*(-96.1881+x*(701.46+x*(-2716.18+x*(5170.57+x*-3778.13)))))"),TFormula("","0.924521378304"),TFormula("","1.22839558125"),TFormula("","0.902334972097"),TFormula("","0.860957+x*(3.592+x*(-27.3261+x*(81.8887+x*(-16.1122+x*(-354.848+x*456.086)))))"),TFormula("","0.99280418909"),TFormula("","0.99210968705")};

  for (unsigned int j=0; j< sizeof(ptMin)/sizeof(Float_t); ++j){
     if (flavor>=5){
        if (sysType[j]=="central" && jetFlavor[j]==0 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }
     else if (flavor==4){
        if (sysType[j]=="central" && jetFlavor[j]==1 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }
     else if (flavor<4 or flavor>6){
        if (sysType[j]=="central" && jetFlavor[j]==2 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }

  }
  return sf;
}

double get_bweight2017(float pt, float eta, int flavor, float deepcsv){

  double sf=1.0;

TString sysType[]={"central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","up_jesPileUpPtBB"};
int jetFlavor[]={1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2};
float etaMin[]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,1.6};
float etaMax[]={2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,2.5};
float ptMin[]={20.0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,40,40,40,40,40,40,40,40,40,40,40,40,60,60,60,60,60,60,60,60,60,60,60,60,60};
float ptMax[]={10000,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,30,30,30,30,30,30,30,30,30,30,30,30,40,40,40,40,40,40,40,40,40,40,40,40,60,60,60,60,60,60,60,60,60,60,60,60,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0};
float discrMin[]={-15,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,-15,0,0.0127,0.4599,0.4599};
float discrMax[]={1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,0,0.0127,0.4599,1.1,1.1};
TFormula formula[]={TFormula("","1.0"),TFormula("","1.81142222881"),TFormula("","1.60441291332"),TFormula("","(1.82719+-2.92738*x)"),TFormula("","(1.75608+-2.5458*x)"),TFormula("","(1.19116+-0.327836*x)"),TFormula("","(1.90911+-2.54988*x)"),TFormula("","(1.03419+-0.315098*x)"),TFormula("","(0.788629+0.218843*x)"),TFormula("","(0.698013+0.391543*x)"),TFormula("","(2.00759+-1.84362*x)"),TFormula("","(-0.125006+1.45201*x)"),TFormula("","(1.90558+-1.41484*x)"),TFormula("","(1.0524+-0.306085*x)"),TFormula("","(1.6226+-1.00056*x)"),TFormula("","(1.43314+-0.781034*x)"),TFormula("","(-0.547223+1.40722*x)"),TFormula("","(3.00736+-2.3463*x)"),TFormula("","0.686866819859"),TFormula("","1.18836784363"),TFormula("","1.37147152424"),TFormula("","(1.43235+-0.799939*x)"),TFormula("","(1.66901+-2.06992*x)"),TFormula("","(1.33295+-0.750477*x)"),TFormula("","(1.15141+-0.188633*x)"),TFormula("","(1.54866+-1.20331*x)"),TFormula("","(0.533471+1.0041*x)"),TFormula("","(1.20547+-0.276628*x)"),TFormula("","(1.21036+-0.284978*x)"),TFormula("","(1.44317+-0.644749*x)"),TFormula("","(0.906924+0.11234*x)"),TFormula("","(1.44503+-0.586955*x)"),TFormula("","(0.654996+0.375271*x)"),TFormula("","(1.7562+-0.90075*x)"),TFormula("","(1.78049+-0.927586*x)"),TFormula("","(2.54186+-1.73156*x)"),TFormula("","0.829339146614"),TFormula("","1.01487195492"),TFormula("","1.42567241192"),TFormula("","(1.59948+-2.28394*x)"),TFormula("","(1.46025+-1.5368*x)"),TFormula("","(1.20582+-0.537862*x)"),TFormula("","(0.790572+0.747341*x)"),TFormula("","(1.20125+-0.30164*x)"),TFormula("","(0.832859+0.49938*x)"),TFormula("","(2.26925+-2.23817*x)"),TFormula("","(0.753622+0.348672*x)"),TFormula("","(0.685862+0.453385*x)"),TFormula("","(1.50468+-0.70265*x)"),TFormula("","(0.468977+0.643294*x)"),TFormula("","(1.5193+-0.635951*x)"),TFormula("","(1.09687+-0.146454*x)"),TFormula("","(1.63336+-0.739265*x)"),TFormula("","(1.96102+-1.08526*x)"),TFormula("","0.887694478035"),TFormula("","1.19852519035"),TFormula("","1.39223515987"),TFormula("","(1.47722+-1.11676*x)"),TFormula("","(1.77628+-2.72161*x)"),TFormula("","(0.943255+0.549018*x)"),TFormula("","(1.10613+0.0449144*x)"),TFormula("","(1.32333+-0.509881*x)"),TFormula("","(0.701297+0.842666*x)"),TFormula("","(2.25632+-2.12098*x)"),TFormula("","(1.06152+-0.0817149*x)"),TFormula("","(1.63933+-0.974639*x)"),TFormula("","(0.134801+1.1495*x)"),TFormula("","(1.73766+-0.933493*x)"),TFormula("","(2.22675+-1.52918*x)"),TFormula("","(0.0821895+0.955829*x)"),TFormula("","(1.08546+-0.15276*x)"),TFormula("","(2.36793+-1.50701*x)"),TFormula("","0.877504169941"),TFormula("","0.950694382191"),TFormula("","1.44100916386"),TFormula("","(1.54857+-1.41342*x)"),TFormula("","(1.73751+-2.42732*x)"),TFormula("","(1.44789+-1.29022*x)"),TFormula("","(0.571435+1.42243*x)"),TFormula("","(1.78123+-1.66772*x)"),TFormula("","(0.309895+1.53152*x)"),TFormula("","(2.17497+-2.02302*x)"),TFormula("","(0.986371+0.00564394*x)"),TFormula("","(1.13771+-0.228228*x)"),TFormula("","(0.273497+0.991893*x)"),TFormula("","(2.51449+-1.92038*x)"),TFormula("","(1.62461+-0.836548*x)"),TFormula("","(-0.665396+1.817*x)"),TFormula("","(2.71957+-1.9233*x)"),TFormula("","(1.22017+-0.339981*x)"),TFormula("","0.883926451206"),TFormula("","0.959411382675"),TFormula("","0.711394774422"),TFormula("","0.522118+x*(16.8938+x*(-166.6+x*(804.84+x*(-2004.91+x*(2367.62+x*-954.158)))))"),TFormula("","1.33519892334"),TFormula("","1.00267469883"),TFormula("","0.713391643359"),TFormula("","0.497714+x*(20.1171+x*(-269.507+x*(1873.62+x*(-7065.61+x*(13282.5+x*-9633.78)))))"),TFormula("","1.03381252739"),TFormula("","0.978924036026"),TFormula("","0.726103286079"),TFormula("","0.510185+x*(20.4074+x*(-293.207+x*(2064.22+x*(-7544.04+x*(13609.2+x*-9538.55)))))"),TFormula("","0.925433478951"),TFormula("","0.820273756981"),TFormula("","0.793984206474"),TFormula("","0.600384+x*(17.281+x*(-168+x*(602.48+x*(-218.355+x*(-2866.42+x*4107.09)))))"),TFormula("","1.73867573971"),TFormula("","0.915890455246"),TFormula("","0.781420003284"),TFormula("","0.552756+x*(20.9675+x*(-248.079+x*(1198.06+x*(-2505.14+x*(1723.95+x*353.676)))))"),TFormula("","1.00905711842"),TFormula("","0.823634982109"),TFormula("","0.783506608187"),TFormula("","0.532981+x*(23.7853+x*(-347.513+x*(2293.01+x*(-7588.46+x*(12126.8+x*-7383.31)))))"),TFormula("","1.17896936122"),TFormula("","0.94732683897"),TFormula("","0.818477417805"),TFormula("","0.610969+x*(18.947+x*(-220.818+x*(1270.45+x*(-4141.73+x*(7273.26+x*-5188.77)))))"),TFormula("","1.46030369379"),TFormula("","1.03094363213"),TFormula("","0.841420670359"),TFormula("","0.650138+x*(17.7183+x*(-224.163+x*(1221.25+x*(-3342.9+x*(4517.03+x*-2371.91)))))"),TFormula("","1.12403809597"),TFormula("","1.06825149059"),TFormula("","0.805575370313"),TFormula("","0.649058+x*(13.9971+x*(-137.833+x*(483.38+x*(-171.555+x*(-2108.87+x*2856.87)))))"),TFormula("","0.922255101987"),TFormula("","0.970468223095"),TFormula("","0.820376783122"),TFormula("","0.569615+x*(23.7962+x*(-348.16+x*(2402.08+x*(-8500.46+x*(14974.5+x*-10360.2)))))"),TFormula("","1.31390169383"),TFormula("","1.08990526199"),TFormula("","0.845690801089"),TFormula("","0.613819+x*(22.7368+x*(-390.13+x*(3100.24+x*(-12283.5+x*(23312.6+x*-16822.6)))))"),TFormula("","1.06944368981"),TFormula("","1.07131278515"),TFormula("","0.848836897087"),TFormula("","0.69298+x*(14.4889+x*(-187.342+x*(1040.1+x*(-2585.88+x*(2453.3+x*-289.334)))))"),TFormula("","0.961116156374"),TFormula("","0.950807290389")};

  for (unsigned int j=0; j< sizeof(ptMin)/sizeof(Float_t); ++j){
     if (flavor>=5){
        if (sysType[j]=="central" && jetFlavor[j]==0 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }
     else if (flavor==4){
        if (sysType[j]=="central" && jetFlavor[j]==1 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }
     else if (flavor<4 or flavor>6){
        if (sysType[j]=="central" && jetFlavor[j]==2 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }

  }
  return sf;
}

double get_bweight2018(float pt, float eta, int flavor, float deepcsv){

double sf=1.0;

TString sysType[]={"central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","central","up_jesPileUpPtBB"};
int jetFlavor[]={1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2};
float etaMin[]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,0.0,0.0,0.0,0.0,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,1.6};
float etaMax[]={2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,0.8,0.8,0.8,0.8,1.6,1.6,1.6,1.6,2.5,2.5,2.5,2.5,2.5};
float ptMin[]={20.0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,20,20,20,20,20,20,20,20,20,20,20,20,30,30,30,30,30,30,30,30,30,30,30,30,40,40,40,40,40,40,40,40,40,40,40,40,60,60,60,60,60,60,60,60,60,60,60,60,60};
float ptMax[]={10000,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,30,30,30,30,30,30,30,30,30,30,30,30,40,40,40,40,40,40,40,40,40,40,40,40,60,60,60,60,60,60,60,60,60,60,60,60,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0,10000.0};
float discrMin[]={-15,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,-15,0,0.0127,0.3915,0.3915};
float discrMax[]={1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0761,0.18635,0.2547,0.3231,0.3915,0.4599,0.5247,0.5859,0.6471,0.7083,0.7695,0.82105,0.863,0.905,0.947,0.989,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,0,0.0127,0.3915,1.1,1.1};
TFormula formula[]={TFormula("","1.0"),TFormula("","1.15244174004"),TFormula("","0.963585853577"),TFormula("","(0.800652+2.14105*x)"),TFormula("","(1.37325+-0.931634*x)"),TFormula("","(0.96768+0.660697*x)"),TFormula("","(1.64846+-1.44631*x)"),TFormula("","(1.44087+-0.916071*x)"),TFormula("","(0.63579+0.834474*x)"),TFormula("","(1.85799+-1.49486*x)"),TFormula("","(0.806681+0.299491*x)"),TFormula("","(0.596719+0.623957*x)"),TFormula("","(2.40617+-1.93068*x)"),TFormula("","(-0.574953+1.94342*x)"),TFormula("","(2.16446+-1.39306*x)"),TFormula("","(2.35958+-1.61915*x)"),TFormula("","(-0.862665+1.94134*x)"),TFormula("","(5.30345+-4.56987*x)"),TFormula("","0.783852279186"),TFormula("","1.11615109444"),TFormula("","1.09746086597"),TFormula("","(1.08612+0.149056*x)"),TFormula("","(1.02487+0.477744*x)"),TFormula("","(1.41711+-1.06226*x)"),TFormula("","(1.13004+-0.173789*x)"),TFormula("","(0.881896+0.460042*x)"),TFormula("","(1.56835+-1.03258*x)"),TFormula("","(0.88676+0.266435*x)"),TFormula("","(1.17587+-0.227016*x)"),TFormula("","(1.19258+-0.252831*x)"),TFormula("","(1.22674+-0.301059*x)"),TFormula("","(1.02785+-0.0426008*x)"),TFormula("","(1.2485+-0.311335*x)"),TFormula("","(1.21223+-0.269304*x)"),TFormula("","(1.18238+-0.236331*x)"),TFormula("","(2.4741+-1.60034*x)"),TFormula("","0.891365230083"),TFormula("","0.952662587166"),TFormula("","1.16797983646"),TFormula("","(1.19807+-0.395418*x)"),TFormula("","(1.21138+-0.466835*x)"),TFormula("","(1.0319+0.237824*x)"),TFormula("","(1.22214+-0.35097*x)"),TFormula("","(1.05812+0.0679981*x)"),TFormula("","(1.89231+-1.74585*x)"),TFormula("","(0.46549+0.973446*x)"),TFormula("","(1.08259+-0.0798001*x)"),TFormula("","(0.842832+0.290707*x)"),TFormula("","(1.63666+-0.83004*x)"),TFormula("","(0.144486+1.1091*x)"),TFormula("","(2.83292+-2.16529*x)"),TFormula("","(1.22439+-0.301398*x)"),TFormula("","(0.854698+0.1071*x)"),TFormula("","(2.0914+-1.19882*x)"),TFormula("","0.905770897865"),TFormula("","1.04018473625"),TFormula("","1.18778324127"),TFormula("","(1.25115+-0.832663*x)"),TFormula("","(1.141+-0.241574*x)"),TFormula("","(1.16239+-0.325574*x)"),TFormula("","(0.757557+0.927403*x)"),TFormula("","(1.74706+-1.60007*x)"),TFormula("","(0.929177+0.17833*x)"),TFormula("","(1.0661+-0.0826265*x)"),TFormula("","(1.029+-0.0193033*x)"),TFormula("","(0.801968+0.331542*x)"),TFormula("","(1.66061+-0.880718*x)"),TFormula("","(0.817118+0.21544*x)"),TFormula("","(1.51808+-0.638304*x)"),TFormula("","(0.635365+0.384546*x)"),TFormula("","(1.75608+-0.853814*x)"),TFormula("","(1.34884+-0.423782*x)"),TFormula("","0.929720282555"),TFormula("","1.05682229996"),TFormula("","1.24326825142"),TFormula("","(1.34839+-1.38143*x)"),TFormula("","(1.12134+-0.162997*x)"),TFormula("","(1.16548+-0.336311*x)"),TFormula("","(0.825406+0.716235*x)"),TFormula("","(1.69014+-1.49254*x)"),TFormula("","(0.829727+0.378331*x)"),TFormula("","(1.20798+-0.342559*x)"),TFormula("","(0.834451+0.294969*x)"),TFormula("","(1.42121+-0.611776*x)"),TFormula("","(1.62794+-0.903648*x)"),TFormula("","(-0.0267456+1.24669*x)"),TFormula("","(2.10723+-1.35239*x)"),TFormula("","(1.11776+-0.205843*x)"),TFormula("","(0.638782+0.323412*x)"),TFormula("","(1.19067+-0.259363*x)"),TFormula("","0.934159934521"),TFormula("","0.940971791744"),TFormula("","0.780707958205"),TFormula("","0.63312+x*(13.3052+x*(-140.45+x*(621.921+x*(-315.825+x*(-4005.98+x*6661.64)))))"),TFormula("","1.35729189937"),TFormula("","0.931381225586"),TFormula("","0.803105986824"),TFormula("","0.679613+x*(11.1846+x*(-120.628+x*(433.509+x*(720.461+x*(-6387.35+x*8559.62)))))"),TFormula("","1.58262737345"),TFormula("","0.675408482552"),TFormula("","1.23447654266"),TFormula("","1.08101+x*(16.9763+x*(-428.809+x*(3601.28+x*(-13513.9+x*(23650.2+x*-15727.4)))))"),TFormula("","1.51474174507"),TFormula("","0.952404558659"),TFormula("","0.806358824513"),TFormula("","0.643669+x*(14.5764+x*(-146.499+x*(587.811+x*(-167.466+x*(-3725.57+x*5756.6)))))"),TFormula("","1.6971142961"),TFormula("","0.916425228119"),TFormula("","0.781658479054"),TFormula("","0.654583+x*(10.5169+x*(-33.6095+x*(-586.445+x*(5282.36+x*(-15266.1+x*14841.8)))))"),TFormula("","1.5606018879"),TFormula("","0.642029762268"),TFormula("","0.985327115089"),TFormula("","0.929852+x*(4.15968+x*(34.7674+x*(-1598.25+x*(12509.6+x*(-36617.6+x*36731.6)))))"),TFormula("","1.34181440332"),TFormula("","0.9850679636"),TFormula("","0.829955860828"),TFormula("","0.674714+x*(13.5519+x*(-106.67+x*(136.967+x*(2316.44+x*(-10502.1+x*12721.5)))))"),TFormula("","1.48407256264"),TFormula("","1.0356105566"),TFormula("","0.807099747221"),TFormula("","0.689884+x*(9.98881+x*(-63.8575+x*(344.53+x*(-1912.29+x*(5800.05+x*-6155.55)))))"),TFormula("","1.7426653596"),TFormula("","0.94734621048"),TFormula("","0.814016114267"),TFormula("","0.750918+x*(4.22701+x*(77.2428+x*(-1612.43+x*(10299.4+x*(-27292.8+x*25773.9)))))"),TFormula("","1.23171977468"),TFormula("","0.991399168968"),TFormula("","0.838031611861"),TFormula("","0.636632+x*(19.1447+x*(-285.144+x*(2179.54+x*(-8284.68+x*(14472.1+x*-8916.38)))))"),TFormula("","1.58381314858"),TFormula("","1.0553842783"),TFormula("","0.820068831672"),TFormula("","0.711647+x*(8.89438+x*(-21.9102+x*(-550.869+x*(5035.11+x*(-15481+x*16129.6)))))"),TFormula("","1.76217943058"),TFormula("","1.07949888706"),TFormula("","0.802970069254"),TFormula("","0.732702+x*(5.34794+x*(22.3551+x*(-663.735+x*(4108.3+x*(-10338.1+x*9296.06)))))"),TFormula("","1.32904834153"),TFormula("","1.31961538292")};

  for (unsigned int j=0; j< sizeof(ptMin)/sizeof(Float_t); ++j){
     if (flavor>=5){
        if (sysType[j]=="central" && jetFlavor[j]==0 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
		sf=formula[j].Eval(deepcsv);
	}
     }
     else if (flavor==4){
        if (sysType[j]=="central" && jetFlavor[j]==1 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }
     else if (flavor<4 or flavor>6){
        if (sysType[j]=="central" && jetFlavor[j]==2 && pt>=ptMin[j] && pt<ptMax[j] && fabs(eta)>=etaMin[j] && fabs(eta)<etaMax[j] && deepcsv>=discrMin[j] && deepcsv<discrMax[j]){
                sf=formula[j].Eval(deepcsv);
        }
     }

  }
  return sf;
}

std::vector<double> computeBInfo(
  const std::vector<const reco::Candidate*>& jets) {
  std::vector<double> output;
  double weight2016=1.0;
  double weight2017=1.0;
  double weight2018=1.0;
  for (unsigned int i = 0; i < jets.size(); ++i) {
      const pat::Jet * jetPat = dynamic_cast<const pat::Jet*> (jets[i]);
      weight2016=weight2016*get_bweight2016(jets[i]->pt(),jets[i]->eta(),jetPat->hadronFlavour(),jetPat->bDiscriminator("pfDeepCSVJetTags:probb")+jetPat->bDiscriminator("pfDeepCSVJetTags:probbb"));
      weight2017=weight2017*get_bweight2017(jets[i]->pt(),jets[i]->eta(),jetPat->hadronFlavour(),jetPat->bDiscriminator("pfDeepCSVJetTags:probb")+jetPat->bDiscriminator("pfDeepCSVJetTags:probbb"));
      weight2018=weight2018*get_bweight2018(jets[i]->pt(),jets[i]->eta(),jetPat->hadronFlavour(),jetPat->bDiscriminator("pfDeepCSVJetTags:probb")+jetPat->bDiscriminator("pfDeepCSVJetTags:probbb"));
  }
  output.push_back(weight2016);
  output.push_back(weight2017);
  output.push_back(weight2018);
  return output;
}

struct order_by_deepcsv{
  inline bool operator() (const reco::Candidate* struct1, const reco::Candidate* struct2)
  {
    return ((dynamic_cast<const pat::Jet*>(struct1)->bDiscriminator("pfDeepCSVJetTags:probb") + dynamic_cast<const pat::Jet*>(struct1)->bDiscriminator("pfDeepCSVJetTags:probbb")) > (dynamic_cast<const pat::Jet*>(struct2)->bDiscriminator("pfDeepCSVJetTags:probb") + dynamic_cast<const pat::Jet*>(struct2)->bDiscriminator("pfDeepCSVJetTags:probbb")));
  }
};

std::vector<double> computeDeepCSVJetInfo(
					  const std::vector<const reco::Candidate*>& jets) {
  std::vector<double> output;

  std::vector<const reco::Candidate*> deepcsvorderedjets=jets;
  std::sort(deepcsvorderedjets.begin(), deepcsvorderedjets.end(), order_by_deepcsv());

  int num_deepcsv_Jets = deepcsvorderedjets.size();
  if (num_deepcsv_Jets == 0) {
    for (int i = 0; i < 12; ++i) {
      output.push_back( -9999 );
    }
  }
  if (num_deepcsv_Jets >= 1) {
    const pat::Jet * jet1Pat = dynamic_cast<const pat::Jet*> (deepcsvorderedjets[0]);
    output.push_back( deepcsvorderedjets[0]->pt() );
    output.push_back( deepcsvorderedjets[0]->eta() );
    output.push_back( deepcsvorderedjets[0]->phi() );
    output.push_back( deepcsvorderedjets[0]->mass() );
    output.push_back( jet1Pat->bDiscriminator("pfDeepCSVJetTags:probb") + jet1Pat->bDiscriminator("pfDeepCSVJetTags:probbb") );
    output.push_back( jet1Pat->hadronFlavour() );
  }
  if (num_deepcsv_Jets >= 2) {
    const pat::Jet * jet1Pat = dynamic_cast<const pat::Jet*> (deepcsvorderedjets[1]);
    output.push_back( deepcsvorderedjets[1]->pt() );
    output.push_back( deepcsvorderedjets[1]->eta() );
    output.push_back( deepcsvorderedjets[1]->phi() );
    output.push_back( deepcsvorderedjets[1]->mass() );
    output.push_back( jet1Pat->bDiscriminator("pfDeepCSVJetTags:probb") + jet1Pat->bDiscriminator("pfDeepCSVJetTags:probbb") );
    output.push_back( jet1Pat->hadronFlavour() );
  }
  if (num_deepcsv_Jets == 1) {
    for (int i = 6; i < 12; ++i) {
      output.push_back( -9999 );
    }
  }
  return output;
}

//JetVariables computeJetInfo(
std::vector<double> computeJetInfo(
    const std::vector<const reco::Candidate*>& jets) {
  //JetVariables output;
  std::vector<double> output;

  //for (auto var : output) {
  //  var = -9999;
  //}
  int numJets = jets.size();
  if (numJets == 0) {
    for (int i = 0; i < 20; ++i) {
      output.push_back( -9999 );
    }
  }
  if (numJets == 1) {
    const pat::Jet * jet1Pat = dynamic_cast<const pat::Jet*> (jets[0]);
    output.push_back( jets[0]->pt() );
    output.push_back( jets[0]->eta() );
    output.push_back( jets[0]->phi() );
    output.push_back( jet1Pat->bDiscriminator("pfDeepCSVJetTags:probb") + jet1Pat->bDiscriminator("pfDeepCSVJetTags:probbb") );
    output.push_back( jet1Pat->userFloat("pileupJetId:fullDiscriminant"));
    output.push_back( jet1Pat->partonFlavour() );
    output.push_back( jet1Pat->hadronFlavour() );
    output.push_back( jet1Pat->jecFactor("Uncorrected") );
    if (jet1Pat->hasUserCand("jes+")) {
        output.push_back( jet1Pat->userCand("jes+")->pt() );}
    else output.push_back( -9999 );
    if (jet1Pat->hasUserCand("jes-")) {
        output.push_back( jet1Pat->userCand("jes-")->pt() );}
    else output.push_back( -9999 );
    for (int i = 0; i < 10; ++i) {
      output.push_back( -9999 );
    }
  }
  if (numJets >= 2) {
    for (int i = 0; i < 2; ++i) {
      const pat::Jet * jetPat = dynamic_cast<const pat::Jet*> (jets[i]);
      output.push_back( jets[i]->pt() );
      output.push_back( jets[i]->eta() );
      output.push_back( jets[i]->phi() );
      output.push_back( jetPat->bDiscriminator("pfDeepCSVJetTags:probb") + jetPat->bDiscriminator("pfDeepCSVJetTags:probbb"));
      output.push_back( jetPat->userFloat("pileupJetId:fullDiscriminant"));
      output.push_back( jetPat->partonFlavour() );
      output.push_back( jetPat->hadronFlavour() );
      output.push_back( jetPat->jecFactor("Uncorrected") );
      if (jetPat->hasUserCand("jes+")) {
          output.push_back( jetPat->userCand("jes+")->pt() );}
      else output.push_back( -9999 );
      if (jetPat->hasUserCand("jes-")) {
          output.push_back( jetPat->userCand("jes-")->pt() );}
      else output.push_back( -9999 );
    }
  }

  return output;
}

